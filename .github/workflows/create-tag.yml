name: Create Reusable Tag

on:
  workflow_call:
    outputs:
      new_tag:
        description: "The newly created SemVer tag"
        value: ${{ jobs.tag.outputs.new_tag }}

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create SemVer Tag
        id: create_tag
        run: |
          #!/bin/bash
          # Get the latest tag, or set a default if no tags exist
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)

          if [ -z "$latest_tag" ]; then
            echo "No tags found, starting with 0.1.0"
            new_tag="0.1.0"
          else
            echo "Latest tag is $latest_tag"
            commits=$(git log ${latest_tag}..HEAD --oneline)

            major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
            minor=$(echo $latest_tag | cut -d. -f2)
            patch=$(echo $latest_tag | cut -d. -f3)

            if echo "$commits" | grep -q -E "(BREAKING CHANGE)|(!)"; then
              major=$((major + 1))
              minor=0
              patch=0
            elif echo "$commits" | grep -q "(feat)"; then
              minor=$((minor + 1))
              patch=0
            elif echo "$commits" | grep -q "(fix)"; then
              patch=$((patch + 1))
            else
              patch=$((patch + 1))
            fi
            new_tag="${major}.${minor}.${patch}"
          fi

          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Push new tag to repository
        if: steps.create_tag.outputs.new_tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.create_tag.outputs.new_tag }}
          git push origin ${{ steps.create_tag.outputs.new_tag }}
