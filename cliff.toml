# cliff.toml
# Configuration file for git-cliff

[changelog]
# changelog header
header = """# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = '''
{% if version %}    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}    ## [unreleased]
{% endif %}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}(**{{ commit.scope }}**) {% endif %}{{ commit.message | upper_first }} ([`{{ commit.id | truncate(length=7, end="") }}`](https://github.com/krsite-dl/krsite-dl/commit/{{ commit.id }}))
    {% endfor %}
{% endfor %}
'''
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process the commits starting from the latest tag
latest_tag = "v[0-9]*"
# sort the tags topologically
sort_tags = false
# glob pattern for the tags to be parsed
tag_pattern = "v[0-9]*"
# regex for parsing the commit messages
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^chore", group = "Miscellaneous Tasks" },
    { message = "^revert", group = "Reverts" },
]